@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    string firstName = User.Identity?.Name?.Split(' ')?.FirstOrDefault();
}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var currentUser = await UserManager.GetUserAsync(User);
    if(currentUser != null)
    {
            <li class="nav-item">
                <button id="notificationIcon" class="nav-link btn btn-link text-dark" title="Notifications">
                    <img src="/imageWebsite/notification_24px.png" alt="Notification Icon">
                </button>
            </li>
    }
    <li class="nav-item">
        <a class="nav-link text-dark" asp-action="Index" asp-controller="Users" title="Manage">Hello @User.Identity?.Name!</a>
        <!-- <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a> -->
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
